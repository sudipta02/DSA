https://leetcode.com/problems/binary-subarrays-with-sum/description/
TC: O(2* 2*N)
SC: O(1)
class Solution {
public:
    int countLessOrEqualGoal(vector<int> &nums, int goal){
        if(goal < 0) return 0;
        int count = 0;
        int left = 0, right = 0;
        int sum = 0;
        while(right < nums.size()){
            sum += nums[right]; 
            while(sum > goal){
                sum = sum - nums[left];
                left++;
            }
            if(sum <= goal){
                count += right - left + 1;
            }
            right++;
        }
        return count;
    }
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        int result = countLessOrEqualGoal(nums, goal) - countLessOrEqualGoal(nums, goal -1);
        return result;
    }
};