https://leetcode.com/problems/isomorphic-strings/description/
TC: O(N)
SC: O(N)
class Solution {
public:
    bool isIsomorphic(string s, string t) {
        if(s.size() != t.size()) return false;
        unordered_map<char, char> mp;
        unordered_set<char> mapped;
        for(int i = 0; i < s.size(); i++){
            if((mp.find(s[i]) == mp.end() && mapped.find(t[i]) == mapped.end()) || mp[s[i]] == t[i]){
                mp[s[i]] = t[i];
                mapped.insert(t[i]);
            }
            else {
                return false;
            }
        }
        for(int i = 0; i < s.size(); i++){
            s[i] = mp[s[i]];
        }
        if(s.compare(t) == 0) return true;
        return false;
    }
};