https://leetcode.com/problems/search-a-2d-matrix/description/
TC: O(log(m*n))
SC: O(1)
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int low = 0, high = m * n -1;
        while(low <= high){
            int mid = (low + high)/2;
            int x = mid/n, y = mid%n;
            int mid_ele = matrix[x][y];
            if(mid_ele == target) return true;
            else if(target > mid_ele) low = mid + 1;
            else high = mid - 1;
        }
        return false;
    }
};