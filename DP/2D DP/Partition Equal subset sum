Very similar to subset sum equals target
https://leetcode.com/problems/partition-equal-subset-sum/
Tabulation method 
class Solution {
public:
    bool canPartition(vector<int>& arr) {
        int sum = 0;
        int n = arr.size();
        for(int i = 0; i < n; i++){
            sum += arr[i];
        }
        if(sum % 2 == 1) return false;
        int k = sum/2;
        vector<vector<int>> dp(n, vector<int>(k+1, 0));
        for(int i = 0; i < n; i++){
            dp[i][0] = 1;
        }
        if(arr[0] <= k){
            dp[0][arr[0]] = 1;
        }
        for(int i = 1; i < n; i++){
            for(int target = 1; target <= k; target++){
                    int take = 0;
                    if(target >= arr[i]) {
                        take = dp[i-1][target - arr[i]];
                    }
                    int notTake = dp[i-1][target];
                    if(take == 1 || notTake == 1){
                        dp[i][target] = 1;
                    }
                    else {
                        dp[i][target] = 0;
                    }
            }
        }
        return dp[n-1][k] == 1;
    }
};