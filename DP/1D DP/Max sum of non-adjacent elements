https://leetcode.com/problems/house-robber/
TC: O(N), SC: O(N)
class Solution {
public:
    int recursion(int i, vector<int> &nums, vector<int> &dp){
        if(i == 0) return nums[0];
        if(i == 1) return max(nums[1], nums[0]);
        if(dp[i] != -1) return dp[i];
        return dp[i] = max(recursion(i-1, nums, dp), nums[i] + recursion(i-2, nums, dp));
    }
    int rob(vector<int> &nums){
        int n = nums.size();
        vector<int> dp(n, -1);
        return recursion(n-1, nums, dp);
    }
};

