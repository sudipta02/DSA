https://leetcode.com/problems/compare-version-numbers/
T.C: O(N)
class Solution {
public:
    int compareVersion(string version1, string version2) {
        vector<int> v1, v2;
        int temp = 0;
        for(int i = 0; i < version1.size(); i++){
            if(version1[i] == '.'){
                v1.push_back(temp);
                temp = 0;
            }
            else {
                temp = temp * 10 + (version1[i] - '0');
            }
        }
        v1.push_back(temp);
        temp = 0;
        for(int i = 0; i < version2.size(); i++){
            if(version2[i] == '.'){
                v2.push_back(temp);
                temp = 0;
            }
            else {
                temp = temp * 10 + (version2[i] - '0');
            }
        }
        v2.push_back(temp);
        int minSize = min(v1.size(), v2.size());
        int j = 0;
        for(j = 0; j < minSize; j++){
            if(v1[j] < v2[j]) return -1;
            else if(v1[j] > v2[j]) return 1;
        }
        if(v1.size() > v2.size()){ // this will execute if v1 has larger length
            while(j < v1.size()){
                if(v1[j] > 0) return 1;
                j++;
            }
        }
        if(v2.size() > v1.size()){ // this will execute if v2 has larger length
            while(j < v2.size()){
                if(v2[j] > 0) return -1;
                j++;
            }
        }
        return 0;
    }
};