https://takeuforward.org/data-structure/median-of-row-wise-sorted-matrix/
T.C : log(10 ^ 9) R *log(C)
int upperBound(vector<int> &arr, int x, int colSize)
{
    int low = 0, high = colSize - 1;
    int ans = colSize;
    while (low <= high)
    {
        int mid = (low + high) / 2;
        if (arr[mid] > x)
        {
            ans = mid;
            high = mid - 1;
        }
        else
        {
            low = mid + 1;
        }
    }
    return ans;
}
int countSmallEqual(vector<vector<int>> &matrix, int mid, int colSize, int rowSize)
{
    int cnt = 0;
    for (int i = 0; i < rowSize; i++)
    {
        cnt = cnt + upperBound(matrix[i], mid, colSize);
    }
    return cnt;
}
int median(vector<vector<int>> &matrix, int R, int C)
{
    int low = INT_MAX, high = INT_MIN;
    int m = matrix.size();
    int n = matrix[0].size();
    int halfSize = (m * n) / 2;
    for (int i = 0; i < m; i++)
    {
        low = min(matrix[i][0], low);
        high = max(matrix[i][n - 1], high);
    }
    while (low <= high)
    {
        int mid = (low + high) / 2;
        int cnt = countSmallEqual(matrix, mid, n, m);
        if (cnt <= halfSize)
            low = mid + 1;
        if (cnt > halfSize)
            high = mid - 1;
    }
    return low;
}