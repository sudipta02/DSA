https://leetcode.com/problems/split-array-largest-sum/
class Solution {
public:
    int findSplits(vector<int> &nums, int maxSum){
        int splits = 1, sum = 0;
        for(int i = 0; i < nums.size(); i++){
            if(sum + nums[i] <= maxSum){
                sum += nums[i];
            }
            else {
                splits++;
                sum = nums[i];
            }
        }
        return splits;
    }
    int splitArray(vector<int>& nums, int k) {
        int maxe = INT_MIN, sume = 0;
        for(int i = 0; i < nums.size(); i++){
            maxe = max(nums[i], maxe);
            sume += nums[i];
        }
        int low = maxe, high = sume;
        int ans = 0;
        while(low <= high){
            int mid = (low+high)/2;
            int splits = findSplits(nums, mid);
            if(splits > k) low = mid+1;
            else {
                ans = mid;
                high = mid-1;
            }
        }
        return ans;
    }
};