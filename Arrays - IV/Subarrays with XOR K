/*
https://www.naukri.com/code360/problems/subarrays-with-xor-k_6826258?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM
*/
#include <bits/stdc++.h>
int subarraysWithSumK(vector<int> a, int b)
{
    // Write your code here
    int count = 0;
    int xor_ = 0;
    unordered_map<int, int> mp;
    mp.insert({0, 1});
    int n = a.size();
    for (int i = 0; i < n; i++)
    {
        xor_ = xor_ ^ a[i];
        int front_xor = xor_ ^ b;
        if (mp.find(front_xor) != mp.end())
        {
            count += mp[front_xor];
        }

        if (mp.find(xor_) != mp.end())
        {
            mp[xor_]++;
        }
        else
        {
            mp.insert({xor_, 1});
        }
    }
    return count;
}